paths:
  /api/user/:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        "400":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

  /api/user/updateUser/{id}:
    put:
      summary: Actualizar usuario rol
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: Identificador único del usuario
          schema:
            type: string
      responses:
        "200":
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        "400":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor


components:
  schemas:
    user:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Identificador único del producto
        firstName:
          type: String
          description: Nombre del usuario
        lastName:
          type: String
          description: Apellido del usuario
        edad:
          type: Number
          description: Edad del usuario
        password:
          type: String
          description: Contraseña del usuario
        email:
          type: String
          description: Correo del usuario
        cart_id:
          type: ObjectId
          description: Identificador único del carrito
      example:
        _id: 1
        firstName: nombre
        lastName: apellido
        edad: 20
        password: 123456
        email: email@email.com
        cart_id: 1
